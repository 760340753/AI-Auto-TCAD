import os
from pathlib import Path
from swbutils.model.Singleton import singleton
from datetime import datetime
from swbutils.mongo.mongoutil import MongoUtil


@singleton
class MongoLogger():
    pass
    debugmode = False

    def __init__(self, tmpfromprefs = None):
        
        self.tmpfromprefs = tmpfromprefs
        self.debugmode = MongoUtil.IsMetaDbDebugEnabled()
        
        if self.debugmode:
            print(f'Initializing python logger')
            fname = "pythondebug.log"
            dirname = MongoUtil.GetDecoratedPath(True)
            temp_folder = os.path.join(MongoUtil.GetBaseMongoDir(self.tmpfromprefs),  dirname)

            try:
                os.makedirs(name=temp_folder, exist_ok=True)
                self.filename = os.path.join(temp_folder, fname)            
                self.DeleteOldLogFile()
            except Exception as e:
                print(f'Failed initializing python logger at {self.filename}')
                self.debugmode = False
                pass    

    def DeleteOldLogFile(self):
        if os.path.exists(self.filename):
            os.remove(self.filename)
        
    def Print(self, *x):
        if self.debugmode:
            date_time = datetime.utcnow().isoformat(sep=' ', timespec='milliseconds')
            if os.path.exists(self.filename):
                f = open(self.filename, "a")
            else:
                f = open(self.filename, "w")
            f.write(date_time + ":")
            for arg in x:
                f.write(arg)
                f.write(' ')
            f.write('\n')
            f.close()
                      