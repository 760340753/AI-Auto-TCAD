from pathlib import Path
from unittest.mock import MagicMock


from pytest import fail  # type: ignore

from rayuela import (
    _process_manager_task,
    reports,
    Status,
    submit_command,
)

from rayuela.utils import deep_dict_get


def test_object_msgpack_serialization_problem():
    """Test getting repr() of Task doesn't throw a msgpack error.

    Example::

        >>> from distributed import Client  # doctest: +SKIP
        >>> client = Client(dashboard_address=None)  # doctest: +SKIP
        >>> future = client.submit(lambda: "success!")  # doctest: +SKIP
        >>> from rayuela.task import Task  # doctest: +SKIP
        >>> task = Task(future)  # doctest: +SKIP
        >>> repr(task)  # doctest: +SKIP
        distributed.protocol.core - CRITICAL - Failed to Serialize
        Traceback (most recent call last):
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/protocol/core.py", line 39, in dumps  # noqa
            small_header, small_payload = dumps_msgpack(msg, **compress_opts)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/protocol/core.py", line 184, in dumps_msgpack
            payload = msgpack.dumps(msg, default=msgpack_encode_default, use_bin_type=True)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/msgpack/__init__.py", line 35, in packb
            return Packer(**kwargs).pack(o)
        File "msgpack/_packer.pyx", line 286, in msgpack._cmsgpack.Packer.pack
        File "msgpack/_packer.pyx", line 292, in msgpack._cmsgpack.Packer.pack
        File "msgpack/_packer.pyx", line 289, in msgpack._cmsgpack.Packer.pack
        File "msgpack/_packer.pyx", line 225, in msgpack._cmsgpack.Packer._pack
        File "msgpack/_packer.pyx", line 283, in msgpack._cmsgpack.Packer._pack
        TypeError: can not serialize 'object' object
        distributed.comm.utils - ERROR - can not serialize 'object' object
        Traceback (most recent call last):
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/comm/utils.py", line 35, in _to_frames
            msg, serializers=serializers, on_error=on_error, context=context
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/protocol/core.py", line 39, in dumps
            small_header, small_payload = dumps_msgpack(msg, **compress_opts)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/protocol/core.py", line 184, in dumps_msgpack
            payload = msgpack.dumps(msg, default=msgpack_encode_default, use_bin_type=True)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/msgpack/__init__.py", line 35, in packb
            return Packer(**kwargs).pack(o)
        File "msgpack/_packer.pyx", line 286, in msgpack._cmsgpack.Packer.pack
        File "msgpack/_packer.pyx", line 292, in msgpack._cmsgpack.Packer.pack
        File "msgpack/_packer.pyx", line 289, in msgpack._cmsgpack.Packer.pack
        File "msgpack/_packer.pyx", line 225, in msgpack._cmsgpack.Packer._pack
        File "msgpack/_packer.pyx", line 283, in msgpack._cmsgpack.Packer._pack
        TypeError: can not serialize 'object' object
        Traceback (most recent call last):
        File "<stdin>", line 1, in <module>
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/task.py", line 77, in __repr__
            return f"<Task: name={self.name!r}, key={self.key!r}, status={self.status!r}>"
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/task.py", line 59, in __getattr__
            data = self._infrastructure.get_metadata([self.key, name])
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/infrastructures/infrastructure.py", line 528, in get_metadata
            result = self._client.get_metadata(keys, default)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/client.py", line 3580, in get_metadata
            return self.sync(self.scheduler.get_metadata, keys=keys, default=default)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/client.py", line 833, in sync
            self.loop, func, *args, callback_timeout=callback_timeout, **kwargs
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/utils.py", line 340, in sync
            raise exc.with_traceback(tb)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/utils.py", line 324, in f
            result[0] = yield future
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/tornado/gen.py", line 735, in run
            value = future.result()
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/core.py", line 883, in send_recv_from_rpc
            result = await send_recv(comm=comm, op=key, **kwargs)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/core.py", line 664, in send_recv
            await comm.write(msg, serializers=serializers, on_error="raise")
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/comm/tcp.py", line 230, in write
            **self.handshake_options,
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/comm/utils.py", line 54, in to_frames
            return _to_frames()
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/comm/utils.py", line 35, in _to_frames
            msg, serializers=serializers, on_error=on_error, context=context
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/protocol/core.py", line 39, in dumps
            small_header, small_payload = dumps_msgpack(msg, **compress_opts)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/protocol/core.py", line 184, in dumps_msgpack
            payload = msgpack.dumps(msg, default=msgpack_encode_default, use_bin_type=True)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/msgpack/__init__.py", line 35, in packb
            return Packer(**kwargs).pack(o)
        File "msgpack/_packer.pyx", line 286, in msgpack._cmsgpack.Packer.pack
        File "msgpack/_packer.pyx", line 292, in msgpack._cmsgpack.Packer.pack
        File "msgpack/_packer.pyx", line 289, in msgpack._cmsgpack.Packer.pack
        File "msgpack/_packer.pyx", line 225, in msgpack._cmsgpack.Packer._pack
        File "msgpack/_packer.pyx", line 283, in msgpack._cmsgpack.Packer._pack
        TypeError: can not serialize 'object' object
    """
    from distributed import Client  # type: ignore
    from rayuela.task import Task
    from tempfile import TemporaryDirectory

    client = Client(dashboard_address=None, local_directory=TemporaryDirectory().name)
    future = client.submit(lambda: "success!")
    task = Task(future)

    try:
        repr(task)

    except TypeError:
        fail("Calling repr() on a manually created task raised an exception.")

    finally:
        client.close()


def test_two_sge_infras_with_no_arguments_compare_equal():
    """Two SGE infrastructures without parameters should compare equal."""
    from rayuela.infrastructures.sge import SnpsSGEInfrastructure

    assert SnpsSGEInfrastructure() == SnpsSGEInfrastructure()


def test_sge_infra_fingerprint_is_an_integer():
    """The return value of compute_fingerprint() should be int."""
    from rayuela.infrastructures.sge import SnpsSGEInfrastructure

    assert isinstance(SnpsSGEInfrastructure.compute_fingerprint(), int)


def test_sge_infra_start_dashboard_parameter_is_incidental():
    """The start_dashboard parameter is incidental."""
    from rayuela.infrastructures.sge import SnpsSGEInfrastructure

    assert SnpsSGEInfrastructure(start_dashboard=True) == SnpsSGEInfrastructure()


def test_submit_command_with_empty_string_stdout_stderr_uses_pipe():
    """Test passing empty string to stdout/err, the param is PIPE.

    Test that if you pass an empty string to stdout and stderr in
    submit_command, the value of the parameter will be subprocess.PIPE
    """
    task = submit_command(
        'echo "success!!" | tee /dev/stderr', stdout="", stderr="", shell=True
    )

    assert task.get_result().stdout == task.get_result().stderr == b"success!!\n"


def test_setting_stderr_in_process_manager_task_does_not_throw_type_error():
    """Setting stderr in _process_manager_task should not throw a TypeError.

    .. note::
        ``_command_task`` was replaced with ``_process_manager_task``, I
        think this test is still valid though.

    Example::

        >>> from rayuela import _command_task  # doctest: +SKIP
        >>> _command_task("", stderr="stderr.txt")  # doctest: +SKIP
        Traceback (most recent call last):
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/__init__.py", line 44, in _command_task  # noqa
            return _run(command, shell=True, check=True, stdout=stdout, stderr=stderr)
        File "/depot/Python-3.6.2/lib/python3.6/subprocess.py", line 403, in run
            with Popen(*popenargs, **kwargs) as process:
        File "/depot/Python-3.6.2/lib/python3.6/subprocess.py", line 665, in __init__
            errread, errwrite) = self._get_handles(stdin, stdout, stderr)
        File "/depot/Python-3.6.2/lib/python3.6/subprocess.py", line 1193, in _get_handles
            errwrite = stderr.fileno()
        AttributeError: 'str' object has no attribute 'fileno'

        During handling of the above exception, another exception occurred:

        Traceback (most recent call last):
        File "<stdin>", line 1, in <module>
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/__init__.py", line 48, in _command_task
            with _Path(stdout).open("wb") as stdout_file:
        File "/depot/Python-3.6.2/lib/python3.6/pathlib.py", line 979, in __new__
            self = cls._from_parts(args, init=False)
        File "/depot/Python-3.6.2/lib/python3.6/pathlib.py", line 654, in _from_parts
            drv, root, parts = self._parse_args(args)
        File "/depot/Python-3.6.2/lib/python3.6/pathlib.py", line 638, in _parse_args
            a = os.fspath(a)
        TypeError: expected str, bytes or os.PathLike object, not int
    """
    try:
        _process_manager_task("ls", stderr="stderr.txt")

    except TypeError:
        fail("Passing stderr to _process_manager_task() raised a TypeError.")

    finally:
        p = Path("stderr.txt")

        if p.exists():
            p.unlink()


def test_reports_supports_iterators():
    """``rayuela.reports()`` should work well with a task iterator.

    Since ``rayuela.reports()`` calls ``rayuela.report()`` repeatedly,
    the tasks argument must be converted to a collection to avoid
    exhausting it, if it happens to be an iterator.
    """
    tasks = (MagicMock(status=Status.RUNNING) for _ in range(5))
    reps = reports(tasks)
    _ = next(reps)  # first report should be ok
    second_report = next(reps)
    assert sum(len(task_set) for task_set in second_report.values()) == 5


def test_metadata_still_works_after_cancellation():
    """Task metadata should work normally after cancellation.

    Observed bug::

        >>> from rayuela import submit_command  # doctest: +SKIP
        >>> t = submit_command('sleep 60')  # doctest: +SKIP
        >>> t.metadata  # doctest: +SKIP
        mappingproxy({'command': 'sleep 60', 'finish_time': None, 'name': '', 'status_file': None, 'submit_time': datetime.datetime(2020, 12, 30, 21, 38, 25, 586164), 'tags': frozenset()})  # noqa
        >>> t.cancel()  # doctest: +SKIP
        >>> t.metadata  # doctest: +SKIP
        Traceback (most recent call last):
        File "<stdin>", line 1, in <module>
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/task.py", line 233, in metadata
            metadata = self._get_metadata(self.key)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 98, in wrapper
            return function(*args, **kwargs)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/task.py", line 127, in _get_metadata
            return _deep_dict_get(self._local_metadata, keys, default)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 54, in deep_dict_get
            inner_dict = dictionary[current_key]
        KeyError: '_'
    """
    try:
        t = submit_command("sleep 60")
        t.cancel()
        t.metadata

    except Exception:
        fail("Task metadata should continue working after calling cancel().")


def test_deep_dict_get_returns_default_on_deep_key_error():
    """deep_dict_get() should return default even if list of keys fail.

    Observed bug::

        >>> from rayuela.utils import deep_dict_get  # doctest: +SKIP
        >>> deep_dict_get({1: {2: 3}}, [1, 4], 5)  # doctest: +SKIP
        Traceback (most recent call last):
        File "<stdin>", line 1, in <module>
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 63, in deep_dict_get  # noqa
            return deep_dict_get(inner_dict, other_keys)
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 66, in deep_dict_get
            return dictionary[current_key]
        KeyError: 4
    """
    assert deep_dict_get({1: {2: 3}}, [1, 4], 5) == 5


def test_deep_dict_get_returns_default_on_non_iterable_keys():
    """deep_dict_get() should return default even if key is not iter.

    Observed bug::

        >>> from rayuela.utils import deep_dict_get  # doctest: +SKIP
        >>> deep_dict_get({1: 2}, 3, 4)  # doctest: +SKIP
        Traceback (most recent call last):
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 59, in deep_dict_get  # noqa
            current_key, *other_keys = keys
        TypeError: 'int' object is not iterable

        During handling of the above exception, another exception occurred:

        Traceback (most recent call last):
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 70, in deep_dict_get
            iter(keys)
        TypeError: 'int' object is not iterable

        During handling of the above exception, another exception occurred:

        Traceback (most recent call last):
        File "<stdin>", line 1, in <module>
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 73, in deep_dict_get
            return deep_dict_get(dictionary, [keys])
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 66, in deep_dict_get
            return dictionary[current_key]
        KeyError: 3
    """
    assert deep_dict_get({1: 2}, 3, 4) == 4


def test_deep_dict_get_returns_default_on_hashable_iterable():
    """deep_dict_get should return default even if key is hash. & iter.

    Observed bug::

        >>> from rayuela.utils import deep_dict_get  # doctest: +SKIP
        >>> deep_dict_get({1: 2}, (3, 4), 5)  # doctest: +SKIP
        Traceback (most recent call last):
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 62, in deep_dict_get  # noqa
            inner_dict = dictionary[current_key]
        KeyError: 3

        During handling of the above exception, another exception occurred:

        Traceback (most recent call last):
        File "<stdin>", line 1, in <module>
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 80, in deep_dict_get
            return deep_dict_get(dictionary, [keys])
        File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/utils.py", line 66, in deep_dict_get
            return dictionary[current_key]
        KeyError: (3, 4)
    """
    assert deep_dict_get({1: 2}, (3, 4), 5) == 5


def test_python_issue_35182_workaround():
    """Test workaround for Python issue #35182.

    When using :func:`rayuela.submit_command` the subprocess may close  # noqa: E501
    its pipes unexpectedly and trigger `Python issue #35182
    <https://bugs.python.org/issue35182>`_.

    Here is an example:

    >>> from rayuela import submit_command  # doctest: +SKIP
    >>> t = submit_command('python3 -c "import os, time; os.close(1), time.sleep(2)"')  # doctest: +SKIP
    >>> t.get_result()  # doctest: +SKIP
    Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
    File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/task.py", line 279, in get_result
        return self._infrastructure.get_result(self.future)
    File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/infrastructures/infrastructure.py", line 67, in wrapper
        return function(self, futures, *args, **kwargs)
    File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/infrastructures/infrastructure.py", line 533, in get_result
        return future.result()
    File "/remote/tcadprj2/cganterh/projects/rayuela_master/out/venv/lib/python3.6/site-packages/distributed/client.py", line 216, in result
        raise exc.with_traceback(tb)
    File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/__init__.py", line 171, in _process_manager_task
        result = _manage_process(process)
    File "/remote/tcadprj2/cganterh/projects/rayuela_master/rayuela/__init__.py", line 129, in _manage_process
        stdout, stderr = process.communicate(timeout=1)
    File "/depot/Python-3.6.2/lib/python3.6/subprocess.py", line 838, in communicate
        stdout, stderr = self._communicate(input, endtime, timeout)
    File "/depot/Python-3.6.2/lib/python3.6/subprocess.py", line 1494, in _communicate
        selector.register(self.stdout, selectors.EVENT_READ)
    File "/depot/Python-3.6.2/lib/python3.6/selectors.py", line 351, in register
        key = super().register(fileobj, events, data)
    File "/depot/Python-3.6.2/lib/python3.6/selectors.py", line 237, in register
        key = SelectorKey(fileobj, self._fileobj_lookup(fileobj), events, data)
    File "/depot/Python-3.6.2/lib/python3.6/selectors.py", line 224, in _fileobj_lookup
        return _fileobj_to_fd(fileobj)
    File "/depot/Python-3.6.2/lib/python3.6/selectors.py", line 39, in _fileobj_to_fd
        "{!r}".format(fileobj)) from None
    ValueError: Invalid file object: <_io.BufferedReader name=19>

    In case this happens, we just ignore the exception and return
    normally with ``stdout=None`` and ``stderr=None``.
    """
    try:
        t = submit_command('python3 -c "import os, time; os.close(1), time.sleep(2)"')
        t.get_result()

    except Exception:
        fail("Closing a pipe in a subprocess should not raise an exception.")
