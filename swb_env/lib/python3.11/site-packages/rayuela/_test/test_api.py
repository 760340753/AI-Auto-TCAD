from pathlib import Path

from string import (
    ascii_letters,
    digits,
)


from hypothesis import given

from hypothesis.strategies import (
    just,
    none,
    text,
)

from pytest import fail


def test_main_module_has_a_submit_command_function():
    """The main module has a ``submit_command()`` to submit shell scripts."""
    from subprocess import CompletedProcess, CalledProcessError
    from rayuela import submit_command

    task = submit_command("echo success")
    assert isinstance(task.get_result(), (CompletedProcess, CalledProcessError))


def test_submit_command_captures_stdout():
    """submit_command() should capture the stdout of the command."""
    from rayuela import submit_command

    task = submit_command("echo success")
    assert task.get_result().stdout == b"success\n"


def test_submit_command_captures_stderr():
    """submit_command() should capture the stderr of the command."""
    from rayuela import submit_command

    task = submit_command('>&2 echo "error"', shell=True)
    assert task.get_result().stderr == b"error\n"


path_string = text(ascii_letters + digits, min_size=1)
path = path_string.map(Path)
command_task_path_argument = none() | just("") | path_string | path


@given(command_task_path_argument, command_task_path_argument)
def test_process_manager_task_accepts_multiple_stdout_stderr_parameters(stdout, stderr):
    """_process_manager_task accepts different types of stdout/stderr params.

    .. todo::
        *   Mock file system access.
    """
    from rayuela import _process_manager_task

    try:
        _process_manager_task("ls", stdout, stderr)

    except Exception:
        fail(
            f"_process_manager_task() raised an exception for the following "
            f"combination of stdout and stderr parameters: {stdout!r}, {stderr!r}"
        )

    finally:
        for p in filter(None, [stdout, stderr]):
            if Path(p).exists():
                Path(p).unlink()
