# ==================================================================
# SYNOPSYS CONFIDENTIAL - This is an unpublished, proprietary work  
# of Synopsys, Inc., and is fully protected under copyright and     
# trade secret laws. You may not view, use, disclose, copy, or      
# distribute this file or any information contained herein except   
# pursuant to a valid written license from Synopsys.                
# ==================================================================

"""
.. currentmodule:: swbpy2.core.Singleton
"""

from swbpy2.core.core import extractUniquePtr

def singleton(theClass):
    """
    Decorator function to build singleton classes.
    """
    
    def onCall(*args, **kwargs):
        if onCall.instance is None:
            # Create instance via singleton static method.
            onCall.instance = extractUniquePtr(theClass.Inst())
        return onCall.instance
    onCall.instance = None
    return onCall
